#!/bin/bash

# Define the types of commits that trigger a version increment
types=("feat" "fix" "chore" "build" "ci" "docs" "style" "refactor" "perf" "test" "feat!" "fix!" "Merge" "Revert")

# Get the commit message from the Git hook arguments
commit_message=$(cat "$1")

# Extract the type of the commit message
commit_type=$(echo "$commit_message" | grep -Eo '^?\w+')

# Check if the commit type is one that triggers a version increment
if [[ " ${types[@]} " =~ " ${commit_type} " ]]; then
  # Get the current version number from the version manifest file (e.g. package.json)
  current_version=$(grep -Eo '"version": "([0-9]+\.){2}[0-9]+"' package.json | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')

  if [[ "$commit_message" =~ "!" ]]; then
    new_version=$(echo "$current_version" | awk -F. -v OFS=. '{print $1+1,0,0}')
  else
  # Increment the version number based on the type of commit message
    case "$commit_type" in
      "feat")
        new_version=$(echo "$current_version" | awk -F. -v OFS=. '{print $1,$2+1,0}')
        ;;
      "fix")
        new_version=$(echo "$current_version" | awk -F. -v OFS=. '{print $1,$2,$3+1}')
        ;;
      *)
        new_version="$current_version"
        ;;
    esac
  fi

  # Replace the current version number with the new version number in the version manifest file
  sed -i "s/\"version\": \"$current_version\"/\"version\": \"$new_version\"/" package.json

  # Print a message to the user indicating the new version number
  echo "Version updated from $current_version to $new_version"
else
  echo "Error: Invalid commit type. Please use one of the following types based: ${types[@]}"
  exit 1
fi
